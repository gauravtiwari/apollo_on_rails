import { GraphQLResult } from 'graphql';
import { SelectionSetWithRoot } from './queries/store';
export interface QueryResultAction {
    type: 'QUERY_RESULT';
    result: GraphQLResult;
    queryId: string;
}
export declare function isQueryResultAction(action: ApolloAction): action is QueryResultAction;
export interface QueryInitAction {
    type: 'QUERY_INIT';
    queryString: string;
    query: SelectionSetWithRoot;
    minimizedQueryString: string;
    minimizedQuery: SelectionSetWithRoot;
    variables: Object;
    forceFetch: boolean;
    returnPartialData: boolean;
    queryId: string;
}
export declare function isQueryInitAction(action: ApolloAction): action is QueryInitAction;
export interface QueryResultClientAction {
    type: 'QUERY_RESULT_CLIENT';
    result: GraphQLResult;
    complete: boolean;
    queryId: string;
}
export declare function isQueryResultClientAction(action: ApolloAction): action is QueryResultClientAction;
export interface QueryStopAction {
    type: 'QUERY_STOP';
    queryId: string;
}
export declare function isQueryStopAction(action: ApolloAction): action is QueryStopAction;
export interface MutationInitAction {
    type: 'MUTATION_INIT';
    mutationString: string;
    mutation: SelectionSetWithRoot;
    variables: Object;
    mutationId: string;
}
export declare function isMutationInitAction(action: ApolloAction): action is MutationInitAction;
export interface MutationResultAction {
    type: 'MUTATION_RESULT';
    result: GraphQLResult;
    mutationId: string;
}
export declare function isMutationResultAction(action: ApolloAction): action is MutationResultAction;
export declare type ApolloAction = QueryResultAction | QueryInitAction | QueryResultClientAction | QueryStopAction | MutationInitAction | MutationResultAction;
