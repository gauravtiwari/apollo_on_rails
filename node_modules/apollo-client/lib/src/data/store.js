"use strict";
var actions_1 = require('../actions');
var writeToStore_1 = require('./writeToStore');
var lodash_1 = require('lodash');
function data(previousState, action, queries, mutations, config) {
    if (previousState === void 0) { previousState = {}; }
    if (actions_1.isQueryResultAction(action)) {
        if (!action.result.errors) {
            var queryStoreValue = queries[action.queryId];
            var clonedState = lodash_1.assign({}, previousState);
            var newState = writeToStore_1.writeSelectionSetToStore({
                result: action.result.data,
                dataId: queryStoreValue.minimizedQuery.id,
                selectionSet: queryStoreValue.minimizedQuery.selectionSet,
                variables: queryStoreValue.variables,
                store: clonedState,
                dataIdFromObject: config.dataIdFromObject,
            });
            return newState;
        }
    }
    else if (actions_1.isMutationResultAction(action)) {
        if (!action.result.errors) {
            var queryStoreValue = mutations[action.mutationId];
            var clonedState = lodash_1.assign({}, previousState);
            var newState = writeToStore_1.writeSelectionSetToStore({
                result: action.result.data,
                dataId: queryStoreValue.mutation.id,
                selectionSet: queryStoreValue.mutation.selectionSet,
                variables: queryStoreValue.variables,
                store: clonedState,
                dataIdFromObject: config.dataIdFromObject,
            });
            return newState;
        }
    }
    return previousState;
}
exports.data = data;
//# sourceMappingURL=store.js.map