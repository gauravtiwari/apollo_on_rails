"use strict";
var graphql_1 = require('graphql');
function parseDocument(doc) {
    var parsed = graphql_1.parse(doc);
    if (!parsed || parsed.kind !== 'Document') {
        throw new Error('Not a valid GraphQL document.');
    }
    return parsed;
}
exports.parseDocument = parseDocument;
function parseFragment(fragment) {
    var parsedFragment = parseDocument(fragment);
    if (parsedFragment.definitions.length !== 1) {
        throw new Error('Must have exactly one definition in document.');
    }
    if (parsedFragment.definitions[0].kind !== 'FragmentDefinition') {
        throw new Error('Must be a fragment.');
    }
    var fragmentDef = parsedFragment.definitions[0];
    return fragmentDef;
}
exports.parseFragment = parseFragment;
function parseQuery(query) {
    var parsedQuery = parseDocument(query);
    if (parsedQuery.kind !== 'Document' && parsedQuery.definitions.length !== 1) {
        throw new Error('Must have exactly one definition in document.');
    }
    var queryDefinition = parsedQuery.definitions[0];
    if (queryDefinition.operation !== 'query') {
        throw new Error('Definition must be a query.');
    }
    return queryDefinition;
}
exports.parseQuery = parseQuery;
function parseMutation(mutation) {
    var parsedMutation = parseDocument(mutation);
    if (parsedMutation.kind !== 'Document' && parsedMutation.definitions.length !== 1) {
        throw new Error('Must have exactly one definition in document.');
    }
    var mutationDefinition = parsedMutation.definitions[0];
    if (mutationDefinition.operation !== 'mutation') {
        throw new Error('Definition must be a query.');
    }
    return mutationDefinition;
}
exports.parseMutation = parseMutation;
//# sourceMappingURL=parser.js.map